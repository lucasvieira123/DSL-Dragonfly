package WrapperDSL.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenDescriptorBase;
import jetbrains.mps.text.rt.TextGenContext;
import jetbrains.mps.text.impl.TextGenSupport;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SEnumOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SProperty;

public class CameraStateConditionalExpression_TextGen extends TextGenDescriptorBase {
  @Override
  public void generateText(final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    if (SPropertyOperations.getEnum(ctx.getPrimaryInput(), PROPS.state$hdU5) == SEnumOperations.getMember(MetaAdapterFactory.getEnumeration(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53e04e3aef164837L, "WrapperDSL.structure.CameraStateGetEnum"), 0x53e04e3aef16483cL, "STARTED")) {
      if (SPropertyOperations.getEnum(ctx.getPrimaryInput(), PROPS.operator$hds3) == SEnumOperations.getMember(MetaAdapterFactory.getEnumeration(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53e04e3aef1642e8L, "WrapperDSL.structure.EqualityOperatorEnum"), 0x53e04e3aef1642eaL, "not_equal")) {
        tgs.append("            (");
        tgs.newLine();
        tgs.append("            (((Drone)thisJoinPoint.getArgs()[0]).getCameraState() == CameraStateEnum.FAILURE)");
        tgs.newLine();
        tgs.append("            ||");
        tgs.newLine();
        tgs.append("            (((Drone)thisJoinPoint.getArgs()[0]).getCameraState() == CameraStateEnum.OFF)");
        tgs.newLine();
        tgs.append("            )");
      }
    }
  }

  private static final class PROPS {
    /*package*/ static final SProperty state$hdU5 = MetaAdapterFactory.getProperty(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53e04e3aef16432dL, 0x341ddc0f5796d3fbL, "state");
    /*package*/ static final SProperty operator$hds3 = MetaAdapterFactory.getProperty(0x3e1c68c4ebe640bdL, 0xa27fe74585aa2487L, 0x53e04e3aef16432dL, 0x341ddc0f5796d3f9L, "operator");
  }
}
